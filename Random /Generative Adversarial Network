{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Generative Adversarial Network","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO6ipHaqlUiDFy5uQer0K7L"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"ep5DpUab08PO","executionInfo":{"status":"ok","timestamp":1623068790028,"user_tz":-420,"elapsed":373,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras import layers, models, losses, optimizers\n","from sklearn.model_selection import train_test_split\n","import numpy as np\n","import matplotlib.pyplot as plt"],"execution_count":120,"outputs":[]},{"cell_type":"code","metadata":{"id":"cI21QhMj08x5","executionInfo":{"status":"ok","timestamp":1623068795091,"user_tz":-420,"elapsed":1322,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["(X_train, y_train),(X_test, y_test) = tf.keras.datasets.mnist.load_data()\n","images = (np.concatenate((X_train, X_test)).reshape(-1, 28, 28, 1) - 127.5) / 127.5 \n","labels = np.concatenate((y_train, y_test))"],"execution_count":121,"outputs":[]},{"cell_type":"code","metadata":{"id":"eyWynD6D73nb","executionInfo":{"status":"ok","timestamp":1623068795092,"user_tz":-420,"elapsed":77,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["BATCH_SIZE = 64\n","STEP_PER_EPOCH = len(images)//BATCH_SIZE"],"execution_count":122,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wbguhi-u5eb2","executionInfo":{"status":"ok","timestamp":1623068795093,"user_tz":-420,"elapsed":72,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["datagen = tf.data.Dataset.from_tensor_slices(images).shuffle(len(images)).batch(64)"],"execution_count":123,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ewxbzoLW23F_"},"source":["# Model Definition"]},{"cell_type":"markdown","metadata":{"id":"53WVuZQ-3AFM"},"source":["## Config"]},{"cell_type":"code","metadata":{"id":"9TSvEDen3B4l","executionInfo":{"status":"ok","timestamp":1623068795094,"user_tz":-420,"elapsed":71,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["LATENT_DIM = 100"],"execution_count":124,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-V-o-Djp1lfZ"},"source":["## Discriminator"]},{"cell_type":"code","metadata":{"id":"LsVzDz1f1ZjY","executionInfo":{"status":"ok","timestamp":1623068795094,"user_tz":-420,"elapsed":69,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["discriminator_input = layers.Input(shape=(28, 28, 1))\n","x = layers.Conv2D(32, (3, 3), activation='relu', strides=2, padding='same')(discriminator_input)\n","x = layers.Conv2D(64, (3, 3), activation='relu', strides=2, padding='same')(x)\n","x = layers.Flatten()(x)\n","\n","x = layers.Dense(512, activation='relu')(x)\n","discriminator_output = layers.Dense(1, activation='sigmoid')(x)\n","\n","discriminator = models.Model(discriminator_input, discriminator_output)"],"execution_count":125,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZVB7718s2Sjv","executionInfo":{"status":"ok","timestamp":1623068795095,"user_tz":-420,"elapsed":67,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}},"outputId":"2058887a-72ef-4d93-b0e2-66d868b24788"},"source":["discriminator.summary()"],"execution_count":126,"outputs":[{"output_type":"stream","text":["Model: \"model_13\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_14 (InputLayer)        [(None, 28, 28, 1)]       0         \n","_________________________________________________________________\n","conv2d_12 (Conv2D)           (None, 14, 14, 32)        320       \n","_________________________________________________________________\n","conv2d_13 (Conv2D)           (None, 7, 7, 64)          18496     \n","_________________________________________________________________\n","flatten_6 (Flatten)          (None, 3136)              0         \n","_________________________________________________________________\n","dense_22 (Dense)             (None, 512)               1606144   \n","_________________________________________________________________\n","dense_23 (Dense)             (None, 1)                 513       \n","=================================================================\n","Total params: 1,625,473\n","Trainable params: 1,625,473\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"cxQdeStd2XUM"},"source":["## Generator"]},{"cell_type":"code","metadata":{"id":"aXRLPWw82x1Y","executionInfo":{"status":"ok","timestamp":1623068795096,"user_tz":-420,"elapsed":56,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["latent_input = layers.Input(shape=(LATENT_DIM))\n","y = layers.Dense(1024, activation='relu', use_bias=False)(latent_input)\n","y = layers.BatchNormalization()(y)\n","y = layers.Dense(7 * 7 * 64, activation='relu', use_bias=False)(y)\n","y = layers.BatchNormalization()(y)\n","y = layers.Reshape((7, 7 ,64))(y)\n","y = layers.Conv2DTranspose(32, (3, 3), strides=2, activation='relu', padding='same', use_bias=False)(y)\n","y = layers.BatchNormalization()(y)\n","generator_output = layers.Conv2DTranspose(1, (3, 3), strides=2, activation='tanh', padding='same', use_bias=False)(y)\n","\n","generator = models.Model(inputs=[latent_input], outputs=[generator_output])"],"execution_count":127,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"liM9uTXb3W4M","executionInfo":{"status":"ok","timestamp":1623068795097,"user_tz":-420,"elapsed":56,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}},"outputId":"96e2d977-1207-47ed-c1ec-7edce0dc74a0"},"source":["generator.summary()"],"execution_count":128,"outputs":[{"output_type":"stream","text":["Model: \"model_14\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_15 (InputLayer)        [(None, 100)]             0         \n","_________________________________________________________________\n","dense_24 (Dense)             (None, 1024)              102400    \n","_________________________________________________________________\n","batch_normalization_9 (Batch (None, 1024)              4096      \n","_________________________________________________________________\n","dense_25 (Dense)             (None, 3136)              3211264   \n","_________________________________________________________________\n","batch_normalization_10 (Batc (None, 3136)              12544     \n","_________________________________________________________________\n","reshape_7 (Reshape)          (None, 7, 7, 64)          0         \n","_________________________________________________________________\n","conv2d_transpose_14 (Conv2DT (None, 14, 14, 32)        18432     \n","_________________________________________________________________\n","batch_normalization_11 (Batc (None, 14, 14, 32)        128       \n","_________________________________________________________________\n","conv2d_transpose_15 (Conv2DT (None, 28, 28, 1)         288       \n","=================================================================\n","Total params: 3,349,152\n","Trainable params: 3,340,768\n","Non-trainable params: 8,384\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rnqYBGE68pdg"},"source":["## Random Latent"]},{"cell_type":"code","metadata":{"id":"hSdDXARe8rcC","executionInfo":{"status":"ok","timestamp":1623068795097,"user_tz":-420,"elapsed":52,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["def generate_random_latent(batch_size=BATCH_SIZE, latent_dim=LATENT_DIM):\n","    return tf.random.uniform(shape=[batch_size, latent_dim])"],"execution_count":129,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sgmRymZZ3YjC"},"source":["# Training"]},{"cell_type":"code","metadata":{"id":"uFIQSnbU3eGv","executionInfo":{"status":"ok","timestamp":1623068795098,"user_tz":-420,"elapsed":50,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["generator_opt = tf.keras.optimizers.Adam(1e-4)\n","discriminator_opt = tf.keras.optimizers.Adam(1e-4)\n","loss_fn = losses.BinaryCrossentropy()"],"execution_count":130,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZbZcJhZA313y"},"source":["## Training Loop"]},{"cell_type":"code","metadata":{"id":"2qE1NpjM4wRy","executionInfo":{"status":"ok","timestamp":1623068795099,"user_tz":-420,"elapsed":49,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["def progress_bar(iteration, total, size=30):\n","    running = iteration < total\n","    c = \">\" if running else \"=\"\n","    p = (size - 1) * iteration // total\n","    fmt = \"{{:-{}d}}/{{}} [{{}}]\".format(len(str(total)))\n","    params = [iteration, total, \"=\" * p + c + \".\" * (size - p - 1)]\n","    return fmt.format(*params)\n","\n","def print_status_bar(iteration, total,  metrics=None):\n","    status = \" - \".join([\"{}: {:.4f}\".format(m.name, m.result()) \n","                        for m in (metrics or [])])\n","    print(\"\\r{} - \".format(progress_bar(iteration, total)) + status, end=\"\")"],"execution_count":131,"outputs":[]},{"cell_type":"code","metadata":{"id":"2--1vL7335Qg","executionInfo":{"status":"ok","timestamp":1623068795101,"user_tz":-420,"elapsed":46,"user":{"displayName":"Technical DSC Gunadarma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1ItG0iUtuxF4PcvropQFAl8GBQ7dB8zff1DPn=s64","userId":"10637252633069768208"}}},"source":["def train(generator, discriminator, datagen, generator_opt, discriminator_opt, loss_fn, epochs=50):\n","    metrics = {'discriminator_metrics': tf.keras.metrics.MeanAbsoluteError(name='discriminator_mae'),\n","               'generator_metrics': tf.keras.metrics.MeanAbsoluteError(name='generator_mae')}\n","    for e in range(1, epochs + 1):\n","        print('\\nEpoch {}/{}'.format(e, epochs))\n","        for step, real_img in enumerate(datagen):\n","            with tf.GradientTape(persistent=True) as tape:\n","                fake_img = generator(generate_random_latent(), training=True)\n","                \n","                real_pred = discriminator(real_img, training=True)\n","                fake_pred = discriminator(fake_img, training=True)\n","\n","                discriminator_loss = tf.add_n([loss_fn(tf.ones(tf.shape(real_pred)), real_pred),\n","                                               loss_fn(tf.zeros(tf.shape(fake_pred)), fake_pred)])\n","                \n","                generator_loss = loss_fn(tf.ones(tf.shape(fake_pred)), fake_pred)\n","\n","            gen_gradients = tape.gradient(generator_loss, generator.trainable_variables)\n","            dis_gradients = tape.gradient(discriminator_loss, discriminator.trainable_variables)\n","            generator_opt.apply_gradients(zip(gen_gradients, generator.trainable_variables))\n","            discriminator_opt.apply_gradients(zip(dis_gradients, discriminator.trainable_variables))\n","\n","            del tape\n","\n","            metrics['discriminator_metrics'](tf.ones(tf.shape(real_pred)), real_pred)\n","            metrics['discriminator_metrics'](tf.zeros(tf.shape(fake_pred)), fake_pred)\n","            metrics['generator_metrics'](tf.ones(tf.shape(fake_pred)), fake_pred)\n","\n","            print_status_bar(step, STEP_PER_EPOCH, list(metrics.values()))\n","        for metric in metrics.values():\n","            metric.reset_states()\n","\n","\n"],"execution_count":132,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QVkB-TsSE5m7","outputId":"1ee1d402-c950-4991-820f-78565e3b12ad"},"source":["train(generator, discriminator, datagen, generator_opt, discriminator_opt, loss_fn, epochs=100)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\n","Epoch 1/100\n","1093/1093 [==============================] - discriminator_mae: 0.0506 - generator_mae: 0.9292\n","Epoch 2/100\n"," 627/1093 [================>.............] - discriminator_mae: 0.0141 - generator_mae: 0.9861"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sYMmGfqbRRPH"},"source":["result = generator(generate_random_latent(1))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-6dZaNhoRhz1"},"source":["plt.imshow(result.numpy().reshape(28, 28), 'gray')"],"execution_count":null,"outputs":[]}]}